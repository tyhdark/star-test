{"name": "test_tx_kyc_withdraw", "status": "failed", "statusDetails": {"message": "AssertionError: assert 19999812 == ((((100000000 - 800000000) + 12) - 100) - 100)\n +  where 800000000 = <bound method Compute.to_u of <class 'tools.compute.Compute'>>(number=800)\n +    where <bound method Compute.to_u of <class 'tools.compute.Compute'>> = Compute.to_u", "trace": "self = <checklist.test_reward.TestReward object at 0x7f31581df460>, creat_one_kyc = ('me1e6jzpjauv02gf8mmz889952zwgrm7p0r8ydj7e', 100000000)\n\n    @pytest.mark.file_829\n    def test_tx_kyc_withdraw(self, creat_one_kyc):\n        \"\"\"\n        主动提取收益(tx withdraw)，KYC用户发起活期委托，计算收益\n        \"\"\"\n        # new kyc\n        user_addr, start_balances = creat_one_kyc\n    \n        # 发起活期委托\n        del_data = dict(from_addr=user_addr, amount=80)\n    \n        self.test_del.test_delegate(**del_data)\n        # 查看KYC开始快高，\n        del_start_height = int(HttpResponse.get_delegate_for_http(user_addr=user_addr)['startHeight'])\n        # 查询开始快高\n        logger.info(f\"del_start_height = {del_start_height}\")\n    \n        # 等待快高\n        time.sleep(10)\n        # 提取收益\n        withdraw_result = self.test_del.test_withdraw(**dict(from_addr=user_addr))\n        # logger.info(f\"withdraw_result=: {withdraw_result}\")\n        del_end_height = int((HttpResponse.hq.Tx.query_tx(tx_hash=withdraw_result['txhash']))['height'])\n        end_balances = HttpResponse.get_balance_unit(user_addr=user_addr)\n        logger.info(f\"balances_balances = {end_balances}\")\n        # 断言\n        # 计算收益\n        reward = Reward.reward_kyc(stake=80, end_height=del_end_height, start_height=del_start_height)\n>       assert end_balances == start_balances - Compute.to_u(number=800) + reward - 100 - 100\nE       AssertionError: assert 19999812 == ((((100000000 - 800000000) + 12) - 100) - 100)\nE        +  where 800000000 = <bound method Compute.to_u of <class 'tools.compute.Compute'>>(number=800)\nE        +    where <bound method Compute.to_u of <class 'tools.compute.Compute'>> = Compute.to_u\n\nchecklist/test_reward.py:78: AssertionError"}, "description": "\n        主动提取收益(tx withdraw)，KYC用户发起活期委托，计算收益\n        ", "attachments": [{"name": "log", "source": "3c257394-224b-4b4b-bafd-fa983e62f693-attachment.txt", "type": "text/plain"}], "start": 1693275230212, "stop": 1693275252662, "uuid": "666c7a9c-7259-4696-94bc-13f03feea48a", "historyId": "40d3a5d2d2bb43dd3f1cb7ca97dbd500", "testCaseId": "3cdef213bb408e3d83b604e88424316e", "fullName": "checklist.test_reward.TestReward#test_tx_kyc_withdraw", "labels": [{"name": "tag", "value": "file_829"}, {"name": "parentSuite", "value": "checklist"}, {"name": "suite", "value": "test_reward"}, {"name": "subSuite", "value": "TestReward"}, {"name": "host", "value": "wang"}, {"name": "thread", "value": "101411-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "checklist.test_reward"}]}