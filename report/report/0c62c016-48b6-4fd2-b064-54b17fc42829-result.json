{"name": "test_region_tow_fixed", "status": "broken", "statusDetails": {"message": "tenacity.RetryError: RetryError[<Future at 0x7f31581f73a0 state=finished raised AssertionError>]", "trace": "self = <Retrying object at 0x7f3158156260 (stop=<tenacity.stop.stop_after_attempt object at 0x7f3158155b10>, wait=<tenacity.w...0x7f31594146a0>, before=<function before_nothing at 0x7f3159406170>, after=<function after_nothing at 0x7f3159406440>)>, fn = <function HttpQuery.Tx.query_tx at 0x7f3158158e50>\nargs = (), kwargs = {'tx_hash': '5D5DA86830EDF894D169A583388FFD40A6A7C81B6A508292396303AE0A9848AC'}, retry_state = <RetryCallState 139849907914016: attempt #10; slept for 27.0; last result: failed (AssertionError )>, do = <tenacity.DoAttempt object at 0x7f31581f7cd0>\n\n    def __call__(\n        self,\n        fn: t.Callable[..., WrappedFnReturnT],\n        *args: t.Any,\n        **kwargs: t.Any,\n    ) -> WrappedFnReturnT:\n        self.begin()\n    \n        retry_state = RetryCallState(retry_object=self, fn=fn, args=args, kwargs=kwargs)\n        while True:\n            do = self.iter(retry_state=retry_state)\n            if isinstance(do, DoAttempt):\n                try:\n>                   result = fn(*args, **kwargs)\n\nvenv-start/lib/python3.10/site-packages/tenacity/__init__.py:382: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ntx_hash = '5D5DA86830EDF894D169A583388FFD40A6A7C81B6A508292396303AE0A9848AC'\n\n    @staticmethod\n    @retry(stop=stop_after_attempt(10), wait=wait_fixed(3))\n    def query_tx(tx_hash):\n        url = HttpQuery.api_url + HttpQuery.query_tx_hash.format(hash=tx_hash)\n        logger.info(f\"{inspect.stack()[0][3]}: {url}\")\n        response = HttpQuery.client.get(url=url)\n        logger.debug(f\"response: {response}\")\n        logger.info(f\"response status_code: {response.status_code}\")\n>       assert response.status_code == 200\nE       AssertionError\n\nx/query.py:294: AssertionError\n\nThe above exception was the direct cause of the following exception:\n\nself = <checklist.test_fixed.TestRegionFixed object at 0x7f3155cb8ac0>, bank_addr = 'me1yvrw8l724k4wdd50wzw6vyxnf0mx245kf8ruar', get_region_id_existing = 'fro'\n\n    @pytest.mark.file_829\n    def test_region_tow_fixed(self, bank_addr, get_region_id_existing):\n        \"\"\"\n        拿链上有的区Id出来，双用户发起定期质押，改get_region_id_existing入参就可以实现创建新区测试\n        \"\"\"\n        # 拿到区id\n        region_id = get_region_id_existing\n        # region_id = \"fro\"\n    \n        test_amount = 100\n        test_month = 1\n        logger.info(f\"region_id={region_id}\")\n        # self.base_cfg.Bank.send_to_admin(amount=(test_amount + 1))\n        # new_kyc 两个用户\n        user1_info = self.test_kyc.test_new_kyc_user(region_id=region_id, addr=None)\n        user1_addr = user1_info\n>       user2_info = self.test_kyc.test_new_kyc_user(region_id=region_id, addr=None)\n\nchecklist/test_fixed.py:170: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ncases/unitcases.py:83: in test_new_kyc_user\n    resp = self.hq.tx.query_tx(tx_hash=tx_info[\"txhash\"])\nvenv-start/lib/python3.10/site-packages/tenacity/__init__.py:289: in wrapped_f\n    return self(f, *args, **kw)\nvenv-start/lib/python3.10/site-packages/tenacity/__init__.py:379: in __call__\n    do = self.iter(retry_state=retry_state)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Retrying object at 0x7f3158156260 (stop=<tenacity.stop.stop_after_attempt object at 0x7f3158155b10>, wait=<tenacity.w...0x7f31594146a0>, before=<function before_nothing at 0x7f3159406170>, after=<function after_nothing at 0x7f3159406440>)>\nretry_state = <RetryCallState 139849907914016: attempt #10; slept for 27.0; last result: failed (AssertionError )>\n\n    def iter(self, retry_state: \"RetryCallState\") -> t.Union[DoAttempt, DoSleep, t.Any]:  # noqa\n        fut = retry_state.outcome\n        if fut is None:\n            if self.before is not None:\n                self.before(retry_state)\n            return DoAttempt()\n    \n        is_explicit_retry = fut.failed and isinstance(fut.exception(), TryAgain)\n        if not (is_explicit_retry or self.retry(retry_state)):\n            return fut.result()\n    \n        if self.after is not None:\n            self.after(retry_state)\n    \n        self.statistics[\"delay_since_first_attempt\"] = retry_state.seconds_since_start\n        if self.stop(retry_state):\n            if self.retry_error_callback:\n                return self.retry_error_callback(retry_state)\n            retry_exc = self.retry_error_cls(fut)\n            if self.reraise:\n                raise retry_exc.reraise()\n>           raise retry_exc from fut.exception()\nE           tenacity.RetryError: RetryError[<Future at 0x7f31581f73a0 state=finished raised AssertionError>]\n\nvenv-start/lib/python3.10/site-packages/tenacity/__init__.py:326: RetryError"}, "description": "\n        拿链上有的区Id出来，双用户发起定期质押，改get_region_id_existing入参就可以实现创建新区测试\n        ", "attachments": [{"name": "log", "source": "f5a4eb33-859c-467e-8ca4-f6f17c39f42f-attachment.txt", "type": "text/plain"}], "start": 1693274810814, "stop": 1693274858672, "uuid": "b885d05b-9b96-454d-a472-8a6690dd59cc", "historyId": "1a7f341365d019ff06f36139a3b2c47d", "testCaseId": "0a6a8a2764b21be1b26b2b33650fa436", "fullName": "checklist.test_fixed.TestRegionFixed#test_region_tow_fixed", "labels": [{"name": "tag", "value": "file_829"}, {"name": "tag", "value": "P0"}, {"name": "parentSuite", "value": "checklist"}, {"name": "suite", "value": "test_fixed"}, {"name": "subSuite", "value": "TestRegionFixed"}, {"name": "host", "value": "wang"}, {"name": "thread", "value": "101411-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "checklist.test_fixed"}]}