{"name": "test_send_tow_user", "status": "broken", "statusDetails": {"message": "TypeError: string indices must be integers", "trace": "self = <checklist.test_send.TestSend object at 0x7f31581f4670>, creat_two_nokyc = ('me1h7udkn6388q3afz2ekfmlt09mjgyuuzpa7qjrq', 'me1k3a2z2trqwg2vp9e57vd9d3nasflzs02lp3typ', 5000000)\n\n    @pytest.mark.file_829\n    def test_send_tow_user(self, creat_two_nokyc):\n        \"\"\"\n        双用户，A给B转钱，B给A转钱。同一个块内互相转钱\n        \"\"\"\n        # 创建两个用户\n        user_addr_a, user_addr_b, balances = creat_two_nokyc\n        time.sleep(6)\n        # 转账数据定义\n        send_data_1 = dict(from_addr=user_addr_a,\n                           to_addr=user_addr_b, amount=1)\n        send_data_2 = dict(from_addr=user_addr_b,\n                           to_addr=user_addr_a, amount=2)\n    \n        partial_function = partial(self.test_bank.test_send, **send_data_1)\n        partial_function2 = partial(self.test_bank.test_send, **send_data_2)\n        with ThreadPoolExecutor(max_workers=2) as executor:\n            # 提交操作1和操作2到进程池中并发执行\n            future1 = executor.submit(partial_function)\n            future2 = executor.submit(partial_function2)\n            #\n            #     # 等待操作1和操作2执行完成\n            future1.result()\n>           future2.result()\n\nchecklist/test_send.py:57: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n/usr/local/python3.10.12/lib/python3.10/concurrent/futures/_base.py:451: in result\n    return self.__get_result()\n/usr/local/python3.10.12/lib/python3.10/concurrent/futures/_base.py:403: in __get_result\n    raise self._exception\n/usr/local/python3.10.12/lib/python3.10/concurrent/futures/thread.py:58: in run\n    result = self.fn(*self.args, **self.kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <cases.unitcases.Bank object at 0x7f31581f4790>, from_addr = 'me1k3a2z2trqwg2vp9e57vd9d3nasflzs02lp3typ', to_addr = 'me1h7udkn6388q3afz2ekfmlt09mjgyuuzpa7qjrq', amount = 2, kwargs = {}\ntx_info = 'Error: rpc error: code = NotFound desc = rpc error: code = NotFound desc = account me1k3a2z2trqwg2vp9e57vd9d3nasflzs0...ug|info|warn|error|fatal|panic) (default \"info\")\\n      --trace               print out full stack trace on errors\\n\\n'\n\n    def test_send(self, from_addr, to_addr, amount, **kwargs):\n        \"\"\"用户发起转账 好\"\"\"\n        # block = self.hq.Block.query_block()\n        # logger.info(f\"block={block}\")\n        tx_info = self.tx.bank.send_tx(from_addr, to_addr, amount, **kwargs)\n        logger.info(f\"{inspect.stack()[0][3]}: {tx_info}\")\n    \n        time.sleep(self.tx.sleep_time)\n        # time.sleep(5)\n>       resp = self.hq.tx.query_tx(tx_info['txhash'])\nE       TypeError: string indices must be integers\n\ncases/unitcases.py:30: TypeError"}, "description": "\n        双用户，A给B转钱，B给A转钱。同一个块内互相转钱\n        ", "attachments": [{"name": "log", "source": "1c2823e5-36d6-451e-807e-4fdb9c3563a9-attachment.txt", "type": "text/plain"}], "start": 1693275307872, "stop": 1693275320077, "uuid": "90ab7129-47c8-46a8-ba0d-f437a6b0b0d2", "historyId": "cca43b123fd84edd0fddc2614bcfacbb", "testCaseId": "c384c95f108ce2a71273abf3a1ce184b", "fullName": "checklist.test_send.TestSend#test_send_tow_user", "labels": [{"name": "tag", "value": "file_829"}, {"name": "parentSuite", "value": "checklist"}, {"name": "suite", "value": "test_send"}, {"name": "subSuite", "value": "TestSend"}, {"name": "host", "value": "wang"}, {"name": "thread", "value": "101411-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "checklist.test_send"}]}