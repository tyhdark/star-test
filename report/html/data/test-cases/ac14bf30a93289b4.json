{"uid":"ac14bf30a93289b4","name":"test_send_to_admin_error_min[test_send3]","fullName":"cases.send.test_send.TestSend#test_send_to_admin_error_min","historyId":"c75bb790ea6b9750baf6d7ee88b9ca99","time":{"start":1692796472620,"stop":1692796473103,"duration":483},"description":"\n        测试sendToAmin命令，输入小于1u金额，\n        ","descriptionHtml":"<pre><code>    测试sendToAmin命令，输入小于1u金额，\n</code></pre>\n","status":"failed","statusMessage":"AssertionError: assert 6658328870161 == 6657535870176","statusTrace":"self = <test_send.TestSend object at 0x7fd00c1169b0>, test_send = {'code': 0, 'min_amount': 9.9999e-07, 'success_amount': 1e-06, 'test_name': 'treasury_pool'}\n\n    @pytest.mark.parametrize(\"test_send\", test_data)\n    def test_send_to_admin_error_min(self, test_send):\n        \"\"\"\n        测试sendToAmin命令，输入小于1u金额，\n        \"\"\"\n        # 先查询管理员余额\n        amount = \"{:.18f}\".format(test_send['min_amount'])\n        start_balance = HttpQuery.Bank.query_balances(addr=Tx.super_addr)\n        treasury_start_balance = treasury_balances()  # 查询国库余额\n        result = Tx.Bank.send_to_admin(amount=amount)  # 发起转账\n        end_balance = HttpQuery.Bank.query_balances(addr=Tx.super_addr)  # 查询管理员余额\n        treasury_end_balance = treasury_balances()\n        assert \"Error\" in result  # 断言1 报错\n        assert end_balance == start_balance  # 断言：管理员余额没有变化\n>       assert treasury_end_balance == treasury_start_balance  # 断言，国库金额没有变化\nE       assert 6658328870161 == 6657535870176\n\ncases/send/test_send.py:75: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1692795348526,"stop":1692795348545,"duration":19},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"description":"\n        测试sendToAmin命令，输入小于1u金额，\n        ","status":"failed","statusMessage":"AssertionError: assert 6658328870161 == 6657535870176","statusTrace":"self = <test_send.TestSend object at 0x7fd00c1169b0>, test_send = {'code': 0, 'min_amount': 9.9999e-07, 'success_amount': 1e-06, 'test_name': 'treasury_pool'}\n\n    @pytest.mark.parametrize(\"test_send\", test_data)\n    def test_send_to_admin_error_min(self, test_send):\n        \"\"\"\n        测试sendToAmin命令，输入小于1u金额，\n        \"\"\"\n        # 先查询管理员余额\n        amount = \"{:.18f}\".format(test_send['min_amount'])\n        start_balance = HttpQuery.Bank.query_balances(addr=Tx.super_addr)\n        treasury_start_balance = treasury_balances()  # 查询国库余额\n        result = Tx.Bank.send_to_admin(amount=amount)  # 发起转账\n        end_balance = HttpQuery.Bank.query_balances(addr=Tx.super_addr)  # 查询管理员余额\n        treasury_end_balance = treasury_balances()\n        assert \"Error\" in result  # 断言1 报错\n        assert end_balance == start_balance  # 断言：管理员余额没有变化\n>       assert treasury_end_balance == treasury_start_balance  # 断言，国库金额没有变化\nE       assert 6658328870161 == 6657535870176\n\ncases/send/test_send.py:75: AssertionError","steps":[],"attachments":[{"uid":"15ea5a515ea03dec","name":"log","source":"15ea5a515ea03dec.txt","type":"text/plain","size":6980}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"cases.send"},{"name":"suite","value":"test_send"},{"name":"subSuite","value":"TestSend"},{"name":"host","value":"wang"},{"name":"thread","value":"60782-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"cases.send.test_send"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"test_send","value":"{'success_amount': 1e-06, 'code': 0, 'min_amount': 9.9999e-07, 'test_name': 'treasury_pool'}"}],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"ac14bf30a93289b4.json","parameterValues":["{'success_amount': 1e-06, 'code': 0, 'min_amount': 9.9999e-07, 'test_name': 'treasury_pool'}"]}